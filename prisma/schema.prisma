// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int       @id @default(autoincrement()) @map("user_id")
  email     String    @unique @map("email") @db.VarChar(255)
  firstName String    @map("first_name") @db.VarChar(255)
  lastName  String    @map("last_name") @db.VarChar(255)
  password  String    @map("password") @db.Text
  history   History[]

  @@map("user")
}

model Qna {
  qnaId    Int    @id @default(autoincrement()) @map("qna_id")
  question String @map("question")
  answer   String @map("answer")

  @@index([question])
  @@map("qna")
}

model History {
  historyId Int       @default(autoincrement()) @map("history_id")
  user      User      @relation(fields: [userId], references: [userId])
  userId    Int       @map("user_id")
  message   Message[]

  @@id([historyId, userId])
  @@map("history")
}

model Message {
  messageId        Int      @default(autoincrement()) @map("message_id")
  botMessage       String   @map("bot_message")
  userMessage      String   @map("user_message")
  messageTimeStamp DateTime @default(now()) @map("message_time_stamp")
  history          History  @relation(fields: [historyId, userId], references: [historyId, userId], onDelete: Cascade)
  historyId        Int      @map("history_id")
  userId           Int      @map("user_id")

  @@id([messageId, historyId, userId])
  @@index([messageTimeStamp(sort: Asc)])
  @@map("message")
}
